{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\login\\\\client_\\\\src\\\\containers\\\\App.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setCurrentUser, addError, setToken } from '../store/actions';\nimport decode from 'jwt-decode';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteViews from './RoutesViews';\nimport NavBar from './NavBar';\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar createGuest = require(\"cross-domain-storage/guest\");\n\nvar createHost = require(\"cross-domain-storage/host\");\n\nvar storageHost = createHost([{\n  origin: \"http://localhost:5000\",\n  allowedMethods: [\"get\", \"set\", \"remove\"]\n}, {\n  origin: \"http://localhost:4000\",\n  allowedMethods: [\"get\", \"set\", \"remove\"]\n}, {\n  origin: \"http://localhost:3030\",\n  allowedMethods: [\"get\", \"set\", \"remove\"]\n}]); //<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\n//When turning on app, it will check if user already logged in\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(addError(err));\n  }\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RouteViews, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Provider","store","setCurrentUser","addError","setToken","decode","BrowserRouter","Router","RouteViews","NavBar","ErrorMessage","createGuest","require","createHost","storageHost","origin","allowedMethods","localStorage","jwtToken","dispatch","err","App"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/login/client_/src/containers/App.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store'\r\nimport {setCurrentUser, addError, setToken} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport RouteViews from './RoutesViews'\r\nimport NavBar from './NavBar'\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nvar createGuest = require(\"cross-domain-storage/guest\");\r\nvar createHost = require(\"cross-domain-storage/host\");\r\nvar storageHost = createHost([\r\n  {\r\n    origin: \"http://localhost:5000\",\r\n    allowedMethods: [\"get\", \"set\", \"remove\"], \r\n  },\r\n  {\r\n    origin: \"http://localhost:4000\",\r\n    allowedMethods: [\"get\", \"set\", \"remove\"], \r\n  },\r\n  {\r\n    origin: \"http://localhost:3030\",\r\n    allowedMethods: [\"get\", \"set\", \"remove\"], \r\n  },\r\n]);//<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\r\n\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken)\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch(err){\r\n        store.dispatch(setCurrentUser({}))\r\n        store.dispatch(addError(err))\r\n    }\r\n}\r\n\r\nconst App = () => {\r\nreturn(<Provider store = {store}>\r\n    <Router>\r\n        <div>\r\n            <NavBar/>\r\n            <RouteViews />\r\n            <ErrorMessage/>\r\n        </div>\r\n    </Router>\r\n</Provider>)\r\n}\r\n\r\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,QAAlC,QAAiD,kBAAjD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,WAAW,GAAGD,UAAU,CAAC,CAC3B;EACEE,MAAM,EAAE,uBADV;EAEEC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFlB,CAD2B,EAK3B;EACED,MAAM,EAAE,uBADV;EAEEC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFlB,CAL2B,EAS3B;EACED,MAAM,EAAE,uBADV;EAEEC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFlB,CAT2B,CAAD,CAA5B,C,CAaG;AAEH;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAAyB;EACrBd,QAAQ,CAACa,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACCjB,KAAK,CAACkB,QAAN,CAAejB,cAAc,CAACG,MAAM,CAACY,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAME,GAAN,EAAU;IACPnB,KAAK,CAACkB,QAAN,CAAejB,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACkB,QAAN,CAAehB,QAAQ,CAACiB,GAAD,CAAvB;EACH;AACJ;;AAED,MAAMC,GAAG,GAAG,MAAM;EAClB,oBAAO,QAAC,QAAD;IAAU,KAAK,EAAIpB,KAAnB;IAAA,uBACH,QAAC,MAAD;MAAA,uBACI;QAAA,wBACI,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AASC,CAVD;;KAAMoB,G;AAYN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}