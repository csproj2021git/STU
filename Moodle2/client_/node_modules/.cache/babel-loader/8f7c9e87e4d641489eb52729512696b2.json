{"ast":null,"code":"'use strict';\n\nvar getId = require('../getId');\n\nvar methods = require('./methods');\n\nmodule.exports = function storageHost(allowedDomains) {\n  function handleMessage(event) {\n    var data = event.data;\n    var domain = allowedDomains.find(function (allowedDomain) {\n      return event.origin === allowedDomain.origin;\n    });\n    var id = getId(data);\n\n    if (!id) {\n      return;\n    }\n\n    if (!domain) {\n      event.source.postMessage({\n        id: id,\n        connectError: true,\n        error: event.origin + ' is not an allowed domain'\n      }, event.origin);\n      return;\n    }\n\n    var method = data.method;\n\n    if (!~domain.allowedMethods.indexOf(method) && method !== 'connect') {\n      event.source.postMessage({\n        id: id,\n        error: method + ' is not an allowed method from ' + event.origin\n      }, event.origin);\n      return;\n    }\n\n    methods[method](event, data);\n  }\n\n  function close() {\n    window.removeEventListener('message', handleMessage);\n  }\n\n  window.addEventListener('message', handleMessage);\n  return {\n    close: close\n  };\n};","map":{"version":3,"names":["getId","require","methods","module","exports","storageHost","allowedDomains","handleMessage","event","data","domain","find","allowedDomain","origin","id","source","postMessage","connectError","error","method","allowedMethods","indexOf","close","window","removeEventListener","addEventListener"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Moodle2/client_/node_modules/cross-domain-storage/distribution/host/index.js"],"sourcesContent":["'use strict';\r\n\r\nvar getId = require('../getId');\r\nvar methods = require('./methods');\r\n\r\nmodule.exports = function storageHost(allowedDomains) {\r\n    function handleMessage(event) {\r\n        var data = event.data;\r\n\r\n        var domain = allowedDomains.find(function (allowedDomain) {\r\n            return event.origin === allowedDomain.origin;\r\n        });\r\n        var id = getId(data);\r\n\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        if (!domain) {\r\n            event.source.postMessage({\r\n                id: id,\r\n                connectError: true,\r\n                error: event.origin + ' is not an allowed domain'\r\n            }, event.origin);\r\n\r\n            return;\r\n        }\r\n\r\n        var method = data.method;\r\n\r\n\r\n        if (!~domain.allowedMethods.indexOf(method) && method !== 'connect') {\r\n            event.source.postMessage({\r\n                id: id,\r\n                error: method + ' is not an allowed method from ' + event.origin\r\n            }, event.origin);\r\n\r\n            return;\r\n        }\r\n\r\n        methods[method](event, data);\r\n    }\r\n\r\n    function close() {\r\n        window.removeEventListener('message', handleMessage);\r\n    }\r\n\r\n    window.addEventListener('message', handleMessage);\r\n\r\n    return {\r\n        close: close\r\n    };\r\n};"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,cAArB,EAAqC;EAClD,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;IAC1B,IAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;IAEA,IAAIC,MAAM,GAAGJ,cAAc,CAACK,IAAf,CAAoB,UAAUC,aAAV,EAAyB;MACtD,OAAOJ,KAAK,CAACK,MAAN,KAAiBD,aAAa,CAACC,MAAtC;IACH,CAFY,CAAb;IAGA,IAAIC,EAAE,GAAGd,KAAK,CAACS,IAAD,CAAd;;IAEA,IAAI,CAACK,EAAL,EAAS;MACL;IACH;;IAED,IAAI,CAACJ,MAAL,EAAa;MACTF,KAAK,CAACO,MAAN,CAAaC,WAAb,CAAyB;QACrBF,EAAE,EAAEA,EADiB;QAErBG,YAAY,EAAE,IAFO;QAGrBC,KAAK,EAAEV,KAAK,CAACK,MAAN,GAAe;MAHD,CAAzB,EAIGL,KAAK,CAACK,MAJT;MAMA;IACH;;IAED,IAAIM,MAAM,GAAGV,IAAI,CAACU,MAAlB;;IAGA,IAAI,CAAC,CAACT,MAAM,CAACU,cAAP,CAAsBC,OAAtB,CAA8BF,MAA9B,CAAF,IAA2CA,MAAM,KAAK,SAA1D,EAAqE;MACjEX,KAAK,CAACO,MAAN,CAAaC,WAAb,CAAyB;QACrBF,EAAE,EAAEA,EADiB;QAErBI,KAAK,EAAEC,MAAM,GAAG,iCAAT,GAA6CX,KAAK,CAACK;MAFrC,CAAzB,EAGGL,KAAK,CAACK,MAHT;MAKA;IACH;;IAEDX,OAAO,CAACiB,MAAD,CAAP,CAAgBX,KAAhB,EAAuBC,IAAvB;EACH;;EAED,SAASa,KAAT,GAAiB;IACbC,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsCjB,aAAtC;EACH;;EAEDgB,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAmClB,aAAnC;EAEA,OAAO;IACHe,KAAK,EAAEA;EADJ,CAAP;AAGH,CA/CD"},"metadata":{},"sourceType":"script"}