{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"];\nimport verifySubselectors from './verifySubselectors';\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref2) {\n  let {\n    areStatesEqual,\n    areOwnPropsEqual,\n    areStatePropsEqual\n  } = _ref2;\n  let hasRunAtLeastOnce = false;\n  let state;\n  let ownProps;\n  let stateProps;\n  let dispatchProps;\n  let mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps);\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    const stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\n\nexport default function finalPropsSelectorFactory(dispatch, _ref) {\n  let {\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const mapStateToProps = initMapStateToProps(dispatch, options);\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  const mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);\n  }\n\n  return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","verifySubselectors","pureFinalPropsSelectorFactory","mapStateToProps","mapDispatchToProps","mergeProps","dispatch","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","state","ownProps","stateProps","dispatchProps","mergedProps","handleFirstCall","firstState","firstOwnProps","handleNewPropsAndNewState","dependsOnOwnProps","handleNewProps","handleNewState","nextStateProps","statePropsChanged","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","pureFinalPropsSelector","finalPropsSelectorFactory","_ref","initMapStateToProps","initMapDispatchToProps","initMergeProps","options","process","env","NODE_ENV"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/login/client_/node_modules/react-redux/es/connect/selectorFactory.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"];\nimport verifySubselectors from './verifySubselectors';\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, {\n  areStatesEqual,\n  areOwnPropsEqual,\n  areStatePropsEqual\n}) {\n  let hasRunAtLeastOnce = false;\n  let state;\n  let ownProps;\n  let stateProps;\n  let dispatchProps;\n  let mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps);\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    const stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n// TODO: Add more comments\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\nexport default function finalPropsSelectorFactory(dispatch, _ref) {\n  let {\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const mapStateToProps = initMapStateToProps(dispatch, options);\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  const mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);\n  }\n\n  return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}