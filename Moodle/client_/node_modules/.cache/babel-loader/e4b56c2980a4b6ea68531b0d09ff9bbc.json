{"ast":null,"code":"import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","map":{"version":3,"names":["getBatch","createListenerCollection","batch","first","last","clear","notify","listener","callback","next","get","listeners","push","subscribe","isSubscribed","prev","unsubscribe","nullListeners","createSubscription","store","parentSub","addNestedSub","trySubscribe","notifyNestedSubs","handleChangeWrapper","subscription","onStateChange","Boolean","tryUnsubscribe","undefined","getListeners"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Polls/client_/node_modules/react-redux/es/utils/Subscription.js"],"sourcesContent":["import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}