{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\Moodle\\\\client_\\\\src\\\\containers\\\\App.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setCurrentUser, setToken, removeError } from '../store/actions';\nimport decode from 'jwt-decode';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport HomePage from \"../pages/Homepage\"; //When turning on app, it will check if user already logged in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(removeError({}));\n  }\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Provider","store","setCurrentUser","setToken","removeError","decode","BrowserRouter","Router","ErrorMessage","HomePage","localStorage","jwtToken","dispatch","err","App"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Moodle/client_/src/containers/App.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store'\r\nimport {setCurrentUser, setToken, removeError} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nimport HomePage from \"../pages/Homepage\";\r\n\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken)\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch(err){\r\n        store.dispatch(setCurrentUser({}))\r\n        store.dispatch(removeError({}))\r\n    }\r\n}\r\n\r\nconst App = () => {\r\nreturn (\r\n  <HomePage />\r\n)\r\n}\r\n\r\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAAyB;EACrBR,QAAQ,CAACO,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACCV,KAAK,CAACW,QAAN,CAAeV,cAAc,CAACG,MAAM,CAACK,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAME,GAAN,EAAU;IACPZ,KAAK,CAACW,QAAN,CAAeV,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACW,QAAN,CAAeR,WAAW,CAAC,EAAD,CAA1B;EACH;AACJ;;AAED,MAAMU,GAAG,GAAG,MAAM;EAClB,oBACE,QAAC,QAAD;IAAA;IAAA;IAAA;EAAA,QADF;AAGC,CAJD;;KAAMA,G;AAMN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}