{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\Moodle2\\\\client_\\\\src\\\\containers\\\\App.jsx\";\nimport React from \"react\";\nimport { store } from '../store';\nimport { setCurrentUser, setToken, removeError } from '../store/actions';\nimport decode from 'jwt-decode';\nimport HomePage from \"../pages/Homepage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar name = 'Guest';\n\nvar createGuest = require(\"cross-domain-storage/guest\");\n\nvar createHost = require(\"cross-domain-storage/host\");\n\nvar storageHost = createHost([{\n  origin: \"http://localhost:7000\",\n  allowedMethods: [\"get\", \"set\", \"remove\"]\n}]); //<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\n\nvar remoteStorage = createGuest(\"http://localhost:5000\"); // <--- Who we want to be guests of\n\nremoteStorage.get(\"jwtToken\", function (error, value) {\n  if (value && !localStorage.jwtToken) {\n    console.log(decode(value));\n    localStorage.setItem('jwtToken', value);\n    window.location.href = '/';\n  }\n}); //When turning on app, it will check if user already logged in\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(removeError({}));\n  }\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","store","setCurrentUser","setToken","removeError","decode","HomePage","name","createGuest","require","createHost","storageHost","origin","allowedMethods","remoteStorage","get","error","value","localStorage","jwtToken","console","log","setItem","window","location","href","dispatch","err","App"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Moodle2/client_/src/containers/App.jsx"],"sourcesContent":["import React from \"react\"\r\nimport {store} from '../store'\r\nimport {setCurrentUser, setToken, removeError} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport HomePage from \"../pages/Homepage\";\r\n\r\nvar name = 'Guest'\r\n\r\nvar createGuest = require(\"cross-domain-storage/guest\");\r\nvar createHost = require(\"cross-domain-storage/host\");\r\nvar storageHost = createHost([\r\n  {\r\n    origin: \"http://localhost:7000\",\r\n    allowedMethods: [\"get\", \"set\", \"remove\"], \r\n  },\r\n]);//<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\r\n\r\nvar remoteStorage = createGuest(\"http://localhost:5000\"); // <--- Who we want to be guests of\r\n\r\nremoteStorage.get(\"jwtToken\", function (error, value) {\r\n    if(value && !localStorage.jwtToken){\r\n      console.log(decode(value))\r\n      localStorage.setItem('jwtToken', value)\r\n      window.location.href = '/'\r\n    }\r\n  });\r\n\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken)\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch(err){\r\n        store.dispatch(setCurrentUser({}))\r\n        store.dispatch(removeError({}))\r\n    }\r\n}\r\n\r\nconst App = () => {\r\nreturn (\r\n  <HomePage />\r\n)\r\n}\r\n\r\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAIC,IAAI,GAAG,OAAX;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,WAAW,GAAGD,UAAU,CAAC,CAC3B;EACEE,MAAM,EAAE,uBADV;EAEEC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFlB,CAD2B,CAAD,CAA5B,C,CAKG;;AAEH,IAAIC,aAAa,GAAGN,WAAW,CAAC,uBAAD,CAA/B,C,CAA0D;;AAE1DM,aAAa,CAACC,GAAd,CAAkB,UAAlB,EAA8B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;EAClD,IAAGA,KAAK,IAAI,CAACC,YAAY,CAACC,QAA1B,EAAmC;IACjCC,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACY,KAAD,CAAlB;IACAC,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCL,KAAjC;IACAM,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;EACD;AACF,CANH,E,CAQA;;AACA,IAAGP,YAAY,CAACC,QAAhB,EAAyB;EACrBhB,QAAQ,CAACe,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACClB,KAAK,CAACyB,QAAN,CAAexB,cAAc,CAACG,MAAM,CAACa,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAMQ,GAAN,EAAU;IACP1B,KAAK,CAACyB,QAAN,CAAexB,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACyB,QAAN,CAAetB,WAAW,CAAC,EAAD,CAA1B;EACH;AACJ;;AAED,MAAMwB,GAAG,GAAG,MAAM;EAClB,oBACE,QAAC,QAAD;IAAA;IAAA;IAAA;EAAA,QADF;AAGC,CAJD;;KAAMA,G;AAMN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}