{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\login\\\\client_\\\\src\\\\containers\\\\App.jsx\";\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setCurrentUser, addError, setToken } from '../store/actions';\nimport decode from 'jwt-decode';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteViews from './RoutesViews';\nimport NavBar from './NavBar';\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar createHost = require('cross-domain-storage/host');\n\nvar createGuest = require('cross-domain-storage/guest');\n\nvar s = createGuest('http://localhost:4000');\nvar storageHost = createHost([{\n  origin: 'http://localhost:3030',\n  allowedMethods: ['get', 'set', 'remove']\n}, {\n  origin: 'http://localhost:4000',\n  allowedMethods: ['get', 'set', 'remove']\n}]); //When turning on app, it will check if user already logged in\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(addError(err));\n  }\n}\n\nconst App = () => /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RouteViews, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 1\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Provider","store","setCurrentUser","addError","setToken","decode","BrowserRouter","Router","RouteViews","NavBar","ErrorMessage","createHost","require","createGuest","s","storageHost","origin","allowedMethods","localStorage","jwtToken","dispatch","err","App"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/login/client_/src/containers/App.jsx"],"sourcesContent":["import React from \"react\"\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store'\r\nimport {setCurrentUser, addError, setToken} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport RouteViews from './RoutesViews'\r\nimport NavBar from './NavBar'\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nvar createHost = require('cross-domain-storage/host')\r\nvar createGuest = require('cross-domain-storage/guest')\r\nvar s = createGuest('http://localhost:4000')\r\nvar storageHost = createHost([\r\n    {\r\n        origin: 'http://localhost:3030',\r\n        allowedMethods: ['get', 'set', 'remove'],\r\n    },\r\n    {\r\n        origin: 'http://localhost:4000',\r\n        allowedMethods: ['get', 'set', 'remove'],\r\n    },\r\n])\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken)\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch(err){\r\n        store.dispatch(setCurrentUser({}))\r\n        store.dispatch(addError(err))\r\n    }\r\n}\r\n\r\nconst App = () => \r\n<Provider store = {store}>\r\n    <Router>\r\n        <div>\r\n            <NavBar/>\r\n            <RouteViews />\r\n            <ErrorMessage/>\r\n        </div>\r\n    </Router>\r\n</Provider>\r\n\r\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,QAAlC,QAAiD,kBAAjD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAIE,CAAC,GAAGD,WAAW,CAAC,uBAAD,CAAnB;AACA,IAAIE,WAAW,GAAGJ,UAAU,CAAC,CACzB;EACIK,MAAM,EAAE,uBADZ;EAEIC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFpB,CADyB,EAKzB;EACID,MAAM,EAAE,uBADZ;EAEIC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFpB,CALyB,CAAD,CAA5B,C,CAUA;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAAyB;EACrBf,QAAQ,CAACc,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACClB,KAAK,CAACmB,QAAN,CAAelB,cAAc,CAACG,MAAM,CAACa,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAME,GAAN,EAAU;IACPpB,KAAK,CAACmB,QAAN,CAAelB,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACmB,QAAN,CAAejB,QAAQ,CAACkB,GAAD,CAAvB;EACH;AACJ;;AAED,MAAMC,GAAG,GAAG,mBACZ,QAAC,QAAD;EAAU,KAAK,EAAIrB,KAAnB;EAAA,uBACI,QAAC,MAAD;IAAA,uBACI;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA;AADJ;EAAA;EAAA;EAAA;AAAA,QADA;;KAAMqB,G;AAWN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}