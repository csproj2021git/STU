{"ast":null,"code":"const fs = require('fs');\n\nconst path = require('path');\n\nconst os = require('os');\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg; // Parser src into an Object\n\nfunction parse(src) {\n  const obj = {}; // Convert buffer to string\n\n  let lines = src.toString(); // Convert line breaks to same format\n\n  lines = lines.replace(/\\r\\n?/mg, '\\n');\n  let match;\n\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]; // Default undefined or null to empty string\n\n    let value = match[2] || ''; // Remove whitespace\n\n    value = value.trim(); // Check if double quoted\n\n    const maybeQuote = value[0]; // Remove surrounding quotes\n\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2'); // Expand newlines if double quoted\n\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n');\n      value = value.replace(/\\\\r/g, '\\r');\n    } // Add to object\n\n\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _log(message) {\n  console.log(`[dotenv][DEBUG] ${message}`);\n}\n\nfunction _resolveHome(envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath;\n} // Populates process.env from .env file\n\n\nfunction config(options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env');\n  let encoding = 'utf8';\n  const debug = Boolean(options && options.debug);\n  const override = Boolean(options && options.override);\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path);\n    }\n\n    if (options.encoding != null) {\n      encoding = options.encoding;\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, {\n      encoding\n    }));\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key];\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key];\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`);\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`);\n          }\n        }\n      }\n    });\n    return {\n      parsed\n    };\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`);\n    }\n\n    return {\n      error: e\n    };\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n};\nmodule.exports.config = DotenvModule.config;\nmodule.exports.parse = DotenvModule.parse;\nmodule.exports = DotenvModule;","map":{"version":3,"names":["fs","require","path","os","LINE","parse","src","obj","lines","toString","replace","match","exec","key","value","trim","maybeQuote","_log","message","console","log","_resolveHome","envPath","join","homedir","slice","config","options","dotenvPath","resolve","process","cwd","encoding","debug","Boolean","override","parsed","DotenvModule","readFileSync","Object","keys","forEach","prototype","hasOwnProperty","call","env","e","error","module","exports"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Polls/client_/node_modules/dotenv/lib/main.js"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}