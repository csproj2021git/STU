{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\StuVoteApp\\\\client\\\\src\\\\containers\\\\RoutesViews.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { getCurrentPoll } from '../store/actions';\nimport HomePage from '../pages/HomePage';\nimport AuthPage from '../pages/AuthPage';\nimport PollPage from '../pages/PollPage';\nimport CreatePollPage from '../pages/CreatePollPage';\nimport TestPage from '../pages/TestPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RouteViews = _ref => {\n  let {\n    getCurrentPoll,\n    auth\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => /*#__PURE__*/_jsxDEV(HomePage, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        render: () => /*#__PURE__*/_jsxDEV(AuthPage, {\n          authType: \"login\",\n          isAuthenticated: auth.isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        render: () => /*#__PURE__*/_jsxDEV(AuthPage, {\n          authType: \"register\",\n          isAuthenticated: auth.isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/poll/new\",\n        render: () => /*#__PURE__*/_jsxDEV(CreatePollPage, {\n          isAuthenticated: auth.isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/poll/:id\",\n        render: props => /*#__PURE__*/_jsxDEV(PollPage, {\n          getPoll: id => getCurrentPoll(id),\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/test\",\n        render: () => /*#__PURE__*/_jsxDEV(TestPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c = RouteViews;\nexport default withRouter(connect(store => ({\n  auth: store.auth\n}), {\n  getCurrentPoll\n})(RouteViews));\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteViews\");","map":{"version":3,"names":["React","connect","Switch","Route","withRouter","getCurrentPoll","HomePage","AuthPage","PollPage","CreatePollPage","TestPage","RouteViews","auth","props","isAuthenticated","id","store"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/StuVoteApp/client/src/containers/RoutesViews.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\n\r\nimport { getCurrentPoll } from '../store/actions';\r\nimport HomePage from '../pages/HomePage';\r\nimport AuthPage from '../pages/AuthPage';\r\nimport PollPage from '../pages/PollPage';\r\nimport CreatePollPage from '../pages/CreatePollPage';\r\nimport TestPage from '../pages/TestPage';\r\n\r\nconst RouteViews = ({ getCurrentPoll, auth }) => (\r\n  <main className=\"container\">\r\n    <Switch>\r\n      <Route exact path=\"/\" render={props => <HomePage {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        render={() => (\r\n          <AuthPage authType=\"login\" isAuthenticated={auth.isAuthenticated} />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/register\"\r\n        render={() => (\r\n          <AuthPage\r\n            authType=\"register\"\r\n            isAuthenticated={auth.isAuthenticated}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/poll/new\"\r\n        render={() => <CreatePollPage isAuthenticated={auth.isAuthenticated} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/poll/:id\"\r\n        render={props => (\r\n          <PollPage getPoll={id => getCurrentPoll(id)} {...props} />\r\n        )}\r\n      />\r\n      <Route exact path=\"/test\" render={() => <TestPage />} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default withRouter(\r\n  connect(\r\n    store => ({\r\n      auth: store.auth,\r\n    }),\r\n    { getCurrentPoll },\r\n  )(RouteViews),\r\n);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,UAAU,GAAG;EAAA,IAAC;IAAEN,cAAF;IAAkBO;EAAlB,CAAD;EAAA,oBACjB;IAAM,SAAS,EAAC,WAAhB;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAsB,MAAM,EAAEC,KAAK,iBAAI,QAAC,QAAD,OAAcA;QAAd;UAAA;UAAA;UAAA;QAAA;MAAvC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,KAAK,MADP;QAEE,IAAI,EAAC,QAFP;QAGE,MAAM,EAAE,mBACN,QAAC,QAAD;UAAU,QAAQ,EAAC,OAAnB;UAA2B,eAAe,EAAED,IAAI,CAACE;QAAjD;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA,QAFF,eASE,QAAC,KAAD;QACE,KAAK,MADP;QAEE,IAAI,EAAC,WAFP;QAGE,MAAM,EAAE,mBACN,QAAC,QAAD;UACE,QAAQ,EAAC,UADX;UAEE,eAAe,EAAEF,IAAI,CAACE;QAFxB;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA,QATF,eAmBE,QAAC,KAAD;QACE,KAAK,MADP;QAEE,IAAI,EAAC,WAFP;QAGE,MAAM,EAAE,mBAAM,QAAC,cAAD;UAAgB,eAAe,EAAEF,IAAI,CAACE;QAAtC;UAAA;UAAA;UAAA;QAAA;MAHhB;QAAA;QAAA;QAAA;MAAA,QAnBF,eAwBE,QAAC,KAAD;QACE,KAAK,MADP;QAEE,IAAI,EAAC,WAFP;QAGE,MAAM,EAAED,KAAK,iBACX,QAAC,QAAD;UAAU,OAAO,EAAEE,EAAE,IAAIV,cAAc,CAACU,EAAD,CAAvC;UAAA,GAAiDF;QAAjD;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA,QAxBF,eA+BE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,OAAlB;QAA0B,MAAM,EAAE,mBAAM,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAxC;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADiB;AAAA,CAAnB;;KAAMF,U;AAsCN,eAAeP,UAAU,CACvBH,OAAO,CACLe,KAAK,KAAK;EACRJ,IAAI,EAAEI,KAAK,CAACJ;AADJ,CAAL,CADA,EAIL;EAAEP;AAAF,CAJK,CAAP,CAKEM,UALF,CADuB,CAAzB"},"metadata":{},"sourceType":"module"}