{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\StuVoteApp\\\\client\\\\src\\\\components\\\\Polls.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { getPolls, getUserPolls } from '../store/actions/polls';\nimport { polls } from \"../store/reducers/polls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Polls extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {\n      getPolls\n    } = this.props;\n    getPolls();\n  }\n\n  render() {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.polls.map(poll => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: poll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default connect(store => ({\n  auth: store.auth,\n  polls: store.polls\n}), {\n  getPolls,\n  getUserPolls\n})(Polls);","map":{"version":3,"names":["React","Component","connect","getPolls","getUserPolls","polls","Polls","constructor","props","componentDidMount","render","map","poll","question","store","auth"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/StuVoteApp/client/src/components/Polls.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {getPolls,getUserPolls} from '../store/actions/polls'\r\nimport {polls} from \"../store/reducers/polls\";\r\n\r\n\r\nclass Polls extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {getPolls} = this.props\r\n        getPolls()\r\n    }\r\n\r\n    render(){\r\n        return \r\n        <div>\r\n            <ul>{this.props.polls.map(poll => (<li>{poll.question}</li>))}</ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connect(store => ({auth: store.auth, polls: store.polls}),{getPolls, getUserPolls})(Polls)"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAiBC,YAAjB,QAAoC,wBAApC;AACA,SAAQC,KAAR,QAAoB,yBAApB;;;AAGA,MAAMC,KAAN,SAAoBL,SAApB,CAA6B;EAEzBM,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;EACH;;EAEDC,iBAAiB,GAAE;IACf,MAAM;MAACN;IAAD,IAAa,KAAKK,KAAxB;IACAL,QAAQ;EACX;;EAEDO,MAAM,GAAE;IACJ;;IACA;IAAA;MAAA,uBACI;QAAA,UAAK,KAAKF,KAAL,CAAWH,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,iBAAK;UAAA,UAAKA,IAAI,CAACC;QAAV;UAAA;UAAA;UAAA;QAAA,QAA9B;MAAL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAGH;;AAhBwB;;AAmB7B,eAAeX,OAAO,CAACY,KAAK,KAAK;EAACC,IAAI,EAAED,KAAK,CAACC,IAAb;EAAmBV,KAAK,EAAES,KAAK,CAACT;AAAhC,CAAL,CAAN,EAAmD;EAACF,QAAD;EAAWC;AAAX,CAAnD,CAAP,CAAoFE,KAApF,CAAf"},"metadata":{},"sourceType":"module"}