{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\Polls\\\\client_\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setCurrentUser, setToken, removeError } from '../store/actions';\nimport decode from 'jwt-decode';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteViews from './RoutesViews';\nimport NavBar from './NavBar';\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")); //When turning on app, it will check if user already logged in\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(removeError({}));\n  }\n} else {}\n\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","Provider","store","setCurrentUser","setToken","removeError","decode","BrowserRouter","Router","RouteViews","NavBar","ErrorMessage","root","createRoot","document","getElementById","localStorage","jwtToken","dispatch","err","render"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Polls/client_/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store'\r\nimport {setCurrentUser, setToken, removeError} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport RouteViews from './RoutesViews'\r\nimport NavBar from './NavBar'\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n  setToken(localStorage.jwtToken)\r\n  try{\r\n      store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n  }catch(err){\r\n      store.dispatch(setCurrentUser({}))\r\n      store.dispatch(removeError({}))\r\n  }\r\n}\r\nelse{\r\n}\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AACA,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb,C,CACA;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAAyB;EACvBb,QAAQ,CAACY,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACCf,KAAK,CAACgB,QAAN,CAAef,cAAc,CAACG,MAAM,CAACU,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAME,GAAN,EAAU;IACPjB,KAAK,CAACgB,QAAN,CAAef,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACgB,QAAN,CAAeb,WAAW,CAAC,EAAD,CAA1B;EACH;AACF,CARD,MASI,CACH;;AACDO,IAAI,CAACQ,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}