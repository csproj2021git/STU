{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\StuVoteApp\\\\client\\\\src\\\\components\\\\Polls.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { getPolls, getUserPolls, getCurrentPoll } from '../store/actions/polls';\nimport auth from \"../store/reducers/auth\";\nimport { polls } from \"../store/reducers/polls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Polls extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getPolls\n    } = this.props;\n    getPolls();\n  }\n\n  handleSelect(id) {\n    const {\n      getCurrentPoll\n    } = this.props;\n    getCurrentPoll(id);\n  }\n\n  render() {\n    const {\n      auth,\n      getPolls,\n      getUserPolls\n    } = this.props;\n    const polls = this.props.polls.map(poll => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => this.handleSelect(poll._id),\n      children: poll.question\n    }, poll._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [auth.isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getPolls,\n          children: \"All polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getUserPolls,\n          children: \"My polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: polls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(store => ({\n  auth: store.auth,\n  polls: store.polls\n}), {\n  getPolls,\n  getUserPolls,\n  getCurrentPoll\n})(Polls);","map":{"version":3,"names":["React","Component","connect","getPolls","getUserPolls","getCurrentPoll","auth","polls","Polls","constructor","props","handleSelect","bind","componentDidMount","id","render","map","poll","_id","question","isAuthenticated","store"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/StuVoteApp/client/src/components/Polls.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {getPolls,getUserPolls, getCurrentPoll} from '../store/actions/polls'\r\nimport auth from \"../store/reducers/auth\";\r\nimport {polls} from \"../store/reducers/polls\";\r\n\r\n\r\nclass Polls extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {getPolls} = this.props\r\n        getPolls()\r\n    }\r\n\r\n    handleSelect(id) {\r\n        const {getCurrentPoll} = this.props\r\n        getCurrentPoll(id)\r\n    }\r\n\r\n    render(){\r\n        const {auth, getPolls, getUserPolls} = this.props\r\n        const polls = this.props.polls.map(poll => (\r\n                <li key={poll._id} onClick={() => this.handleSelect(poll._id)}>{poll.question}</li>\r\n            )\r\n        )\r\n        return (\r\n            <div>\r\n                {auth.isAuthenticated &&(\r\n                    <div>\r\n                        <button onClick={getPolls}>All polls</button>\r\n                        <button onClick={getUserPolls}>My polls</button>\r\n                    </div>\r\n                )}\r\n                <ul>{polls}</ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(store => ({auth: store.auth, polls: store.polls}),{getPolls, getUserPolls, getCurrentPoll})(Polls)"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAiBC,YAAjB,EAA+BC,cAA/B,QAAoD,wBAApD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,KAAR,QAAoB,yBAApB;;;AAGA,MAAMC,KAAN,SAAoBP,SAApB,CAA6B;EAEzBQ,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;EACH;;EAEDC,iBAAiB,GAAE;IACf,MAAM;MAACV;IAAD,IAAa,KAAKO,KAAxB;IACAP,QAAQ;EACX;;EAEDQ,YAAY,CAACG,EAAD,EAAK;IACb,MAAM;MAACT;IAAD,IAAmB,KAAKK,KAA9B;IACAL,cAAc,CAACS,EAAD,CAAd;EACH;;EAEDC,MAAM,GAAE;IACJ,MAAM;MAACT,IAAD;MAAOH,QAAP;MAAiBC;IAAjB,IAAiC,KAAKM,KAA5C;IACA,MAAMH,KAAK,GAAG,KAAKG,KAAL,CAAWH,KAAX,CAAiBS,GAAjB,CAAqBC,IAAI,iBAC/B;MAAmB,OAAO,EAAE,MAAM,KAAKN,YAAL,CAAkBM,IAAI,CAACC,GAAvB,CAAlC;MAAA,UAAgED,IAAI,CAACE;IAArE,GAASF,IAAI,CAACC,GAAd;MAAA;MAAA;MAAA;IAAA,QADM,CAAd;IAIA,oBACI;MAAA,WACKZ,IAAI,CAACc,eAAL,iBACG;QAAA,wBACI;UAAQ,OAAO,EAAEjB,QAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAEC,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR,eAOI;QAAA,UAAKG;MAAL;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AAlCwB;;AAqC7B,eAAeL,OAAO,CAACmB,KAAK,KAAK;EAACf,IAAI,EAAEe,KAAK,CAACf,IAAb;EAAmBC,KAAK,EAAEc,KAAK,CAACd;AAAhC,CAAL,CAAN,EAAmD;EAACJ,QAAD;EAAWC,YAAX;EAAyBC;AAAzB,CAAnD,CAAP,CAAoGG,KAApG,CAAf"},"metadata":{},"sourceType":"module"}