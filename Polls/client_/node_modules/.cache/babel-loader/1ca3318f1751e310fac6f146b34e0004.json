{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abronshtein\\\\Desktop\\\\Code\\\\STU\\\\Polls\\\\client_\\\\src\\\\containers\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setCurrentUser, setToken, removeError } from '../store/actions';\nimport decode from 'jwt-decode';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteViews from './RoutesViews';\nimport NavBar from './NavBar';\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar createGuest = require(\"cross-domain-storage/guest\");\n\nvar createHost = require(\"cross-domain-storage/host\");\n\nvar storageHost = createHost([{\n  origin: \"http://localhost:4000\",\n  allowedMethods: [\"get\", \"set\", \"remove\"]\n}]); //<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\n\nvar remoteStorage = createGuest(\"http://localhost:5000\"); // <--- Who we want to be guests of\n//When turning on app, it will check if user already logged in\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(removeError({}));\n  }\n}\n\nconst App = () => {\n  _s();\n\n  const [crossDomainValue, setCrossDomainValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.preventDefault();\n              remoteStorage.get(\"jwtToken\", function (error, value) {\n                // value for the key of 'fizz' will be retrieved from localStorage on www.baz.com\n                if (error) {\n                  console.log(error);\n                } else {\n                  setCrossDomainValue(value);\n                }\n              });\n            },\n            children: \"What token is in login ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Value stored in cross Domain Storage:\", \" \", crossDomainValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RouteViews, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"lZXBVH+UZv6+JKFZ3l1Bu1LITwg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Provider","store","setCurrentUser","setToken","removeError","decode","BrowserRouter","Router","RouteViews","NavBar","ErrorMessage","createGuest","require","createHost","storageHost","origin","allowedMethods","remoteStorage","localStorage","jwtToken","dispatch","err","App","crossDomainValue","setCrossDomainValue","e","preventDefault","get","error","value","console","log"],"sources":["C:/Users/abronshtein/Desktop/Code/STU/Polls/client_/src/containers/App.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store'\r\nimport {setCurrentUser, setToken, removeError} from '../store/actions'\r\nimport decode from 'jwt-decode'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport RouteViews from './RoutesViews'\r\nimport NavBar from './NavBar'\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\n\r\nvar createGuest = require(\"cross-domain-storage/guest\");\r\nvar createHost = require(\"cross-domain-storage/host\");\r\nvar storageHost = createHost([\r\n  {\r\n    origin: \"http://localhost:4000\",\r\n    allowedMethods: [\"get\", \"set\", \"remove\"], \r\n  },\r\n]);//<--- First add yourself then others, you MUST add yourself, this tells us who is allowed to reach us and with what methods\r\n\r\nvar remoteStorage = createGuest(\"http://localhost:5000\"); // <--- Who we want to be guests of\r\n\r\n//When turning on app, it will check if user already logged in\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken)\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch(err){\r\n        store.dispatch(setCurrentUser({}))\r\n        store.dispatch(removeError({}))\r\n    }\r\n}\r\n\r\nconst App = () => {\r\nconst [crossDomainValue, setCrossDomainValue] = useState('')\r\nreturn (<Provider store = {store}>\r\n    <Router>\r\n        <div>\r\n        <header>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            remoteStorage.get(\"jwtToken\", function (error, value) {\r\n              // value for the key of 'fizz' will be retrieved from localStorage on www.baz.com\r\n              if(error){\r\n                console.log(error)\r\n              }else{\r\n                setCrossDomainValue(value)\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          What token is in login ?\r\n        </button>\r\n        <p>\r\n          Value stored in cross Domain Storage:{\" \"}\r\n          {crossDomainValue}\r\n        </p>\r\n      </header>\r\n            <NavBar/>\r\n            <RouteViews />\r\n            <ErrorMessage/>\r\n        </div>\r\n    </Router>\r\n</Provider>)\r\n}\r\n\r\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,WAAW,GAAGD,UAAU,CAAC,CAC3B;EACEE,MAAM,EAAE,uBADV;EAEEC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf;AAFlB,CAD2B,CAAD,CAA5B,C,CAKG;;AAEH,IAAIC,aAAa,GAAGN,WAAW,CAAC,uBAAD,CAA/B,C,CAA0D;AAE1D;;AACA,IAAGO,YAAY,CAACC,QAAhB,EAAyB;EACrBhB,QAAQ,CAACe,YAAY,CAACC,QAAd,CAAR;;EACA,IAAG;IACClB,KAAK,CAACmB,QAAN,CAAelB,cAAc,CAACG,MAAM,CAACa,YAAY,CAACC,QAAd,CAAP,CAA7B;EACH,CAFD,CAEC,OAAME,GAAN,EAAU;IACPpB,KAAK,CAACmB,QAAN,CAAelB,cAAc,CAAC,EAAD,CAA7B;IACAD,KAAK,CAACmB,QAAN,CAAehB,WAAW,CAAC,EAAD,CAA1B;EACH;AACJ;;AAED,MAAMkB,GAAG,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CzB,QAAQ,CAAC,EAAD,CAAxD;EACA,oBAAQ,QAAC,QAAD;IAAU,KAAK,EAAIE,KAAnB;IAAA,uBACJ,QAAC,MAAD;MAAA,uBACI;QAAA,wBACA;UAAA,wBACA;YACE,OAAO,EAAGwB,CAAD,IAAO;cACdA,CAAC,CAACC,cAAF;cACAT,aAAa,CAACU,GAAd,CAAkB,UAAlB,EAA8B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;gBACpD;gBACA,IAAGD,KAAH,EAAS;kBACPE,OAAO,CAACC,GAAR,CAAYH,KAAZ;gBACD,CAFD,MAEK;kBACHJ,mBAAmB,CAACK,KAAD,CAAnB;gBACD;cACF,CAPD;YAQD,CAXH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAgBA;YAAA,oDACwC,GADxC,EAEGN,gBAFH;UAAA;YAAA;YAAA;YAAA;UAAA,QAhBA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAsBI,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAtBJ,eAuBI,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA,QAvBJ,eAwBI,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA,QAxBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADI;IAAA;IAAA;IAAA;EAAA,QAAR;AA8BC,CAhCD;;GAAMD,G;;KAAAA,G;AAkCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}